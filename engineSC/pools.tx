Pls:
    globals*=Global
    rules+=Rule
;

Global:
    'global'
    variable=Variable
;

Rule:
    ('salience' salience=INT)?
    loop=Loop
    'rule'
    '"'
    name=RuleName
    '"'
    'when'
    lhs=LHS
    'then'
    rhs=RHS
    'end'
;

Loop:
    'no-loop' | 'lock-on-active' | ''
;

RuleName:
   /[\w\-_& ]+/
;

LHS:
  conditions+=Condition
;

Condition:
    (variable=Variable ':')?
    factClass=FactClass
    '(' evaluations=Evaluations? ')'
;

Variable:
    variable=/\$[A-Za-z][A-Za-z0-9_]*/
;

FactClass:
    /[A-Za-z][A-Za-z0-9_]*/
;

Evaluations:
   firstEvaluationChoice=EvaluationChoice
   subsequentEC*=SubsequentEC
;

SubsequentEC:
    logOperator=LogOperator
    evaluationChoice=EvaluationChoice
;

EvaluationChoice:
    EvaluationGrouped | Evaluation
;

EvaluationGrouped:
    negation?='not'
    '('
        evaluations=Evaluations
    ')'
;

Evaluation:
    operand=RelOperand
    continuations=Continuations
;

Continuations:
    firstContinuationChoice=ContinuationChoice
    subsequentCC*=SubsequentCC
;

SubsequentCC:
    logOperator=LogOperator
    continuationChoice=ContinuationChoice
;

ContinuationChoice:
    ContinuationGrouped | Continuation
;

ContinuationGrouped:
    negation?='not'
    '('
        continuations=Continuations
    ')'
;

Continuation:
    relOperator=RelOperator
    operand=RelOperand
;

LogOperator:
   ',' | 'and' | 'or'
;

RelOperator:
    '<=' | '>=' | '>' | '<' | '==' | '!=' | 'contains'
;

Field:
    field=/[A-Za-z][A-Za-z0-9_]*([.][A-Za-z][A-Za-z0-9_]*)*/
;

RelOperand:
    BOOL | Field | Variable | NUMBER | STRING
;

RHS:
  /(.*\n)*?(?=end)/
;